'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _redux = require('redux');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var collectionReducer = function collectionReducer() {
  var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  var action = arguments[1];

  switch (action.type) {
    case 'MONGO_COLLECTION':
      return Object.assign({}, state, _defineProperty({}, action.name, action.items));
    default:
      return state;
  }
};

var readyReducer = function readyReducer() {
  var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  var action = arguments[1];

  switch (action.type) {
    case 'MONGO_COLLECTION_READY_STATE':
      return Object.assign({}, state, _defineProperty({}, action.name, action.state));
    default:
      return state;
  }
};

exports.default = (0, _redux.combineReducers)({
  collections: collectionReducer,
  collectionsReady: readyReducer
});